services:
  authelia:
    container_name: ${JARVIS_CONTAINER_NAME}
    image: authelia/authelia
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - 9091:9091
    environment:
      TZ: ${JARVIS_TZ}
      PUID: ${JARVIS_PUID}
      PGID: ${JARVIS_PGID}
    volumes:
      - ${JARVIS_CONFIG_ROOT}/${JARVIS_CONTAINER_NAME}/config:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.${JARVIS_CONTAINER_NAME}.rule=Host(`${JARVIS_CONTAINER_NAME}.${JARVIS_DOMAIN}`)
      - traefik.http.routers.${JARVIS_CONTAINER_NAME}.entrypoints=websecure
      - traefik.http.routers.${JARVIS_CONTAINER_NAME}.tls=true
      - traefik.http.routers.${JARVIS_CONTAINER_NAME}.tls.certresolver=${JARVIS_CERT_RESOLVER}
      - traefik.http.services.${JARVIS_CONTAINER_NAME}.loadbalancer.server.port=9091
      - traefik.http.middlewares.${JARVIS_CONTAINER_NAME}.forwardAuth.address=http://${JARVIS_CONTAINER_NAME}:9091/api/authz/forward-auth
      - traefik.http.middlewares.${JARVIS_CONTAINER_NAME}.forwardAuth.trustForwardHeader=true
      - traefik.http.middlewares.${JARVIS_CONTAINER_NAME}.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Email,Remote-Name
      - traefik.http.middlewares.${JARVIS_CONTAINER_NAME}.forwardauth.tls.insecureSkipVerify=true
    networks:
      - ${JARVIS_PROXY_DOCKER_NETWORK}

networks:
  proxy:
    external: true